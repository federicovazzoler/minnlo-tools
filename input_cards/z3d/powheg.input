#------------------------------------------------
#   INCOMING BEAMS PARAMETER
#------------------------------------------------
ih1                 1    ! hadron 1 (1 for protons, -1 for antiprotons)
ih2                 1    ! hadron 2 (1 for protons, -1 for antiprotons)
ebeam1         4000d0    ! energy of beam 1
ebeam2         4000d0    ! energy of beam 2

#------------------------------------------------
#   PDF & ALPHAS SETTINGS
#------------------------------------------------
#   To be set only if using LHA pdfs
#
lhans1         303600    ! pdf set for hadron 1 (LHA numbering)
lhans2         303600    ! pdf set for hadron 2 (LHA numbering)

#   ALPHAS AND PDF EVOLUTION
alphas_from_pdf     1    ! (default 0) if 1, uses alphas from PDF evolution tool (e.g. lhapdf or hoppet)
                         ! This is required for running MiNNLO!


#------------------------------------------------
#   RENORMALIZATION/FACTORIZATION SCALE SETTINGS
#------------------------------------------------
#
# This is used only for MiN(N)LO to set the scale at large pT (i.e. in the fixed-order part)
#
largeptscales       0    ! (default 0) dynamical scale used at large pT in fixed-order part
#                        !             0 - m_tt   (invariant mass of top-quark pair)
#                        !             1 - pT_tt  (transverse momentum of top-quark pair)
#                        !             2 - H_T^tt (sum of transverse masses of the top quarks)


#------------------------------------------------
#   MiNLO'/MiNNLO_PS SETTINGS
#------------------------------------------------
minlo               1    ! (default 1) if 1, activate MiNLO'
minnlo              1    ! (default 0) if 1, activate MiNNLO_PS
modlog_p            6    ! (default 6) optional, only works if minnlo is set to 1)
#                        ! if >0d0, activate modified logs and set the exponent
#                        ! if -1d0, activate piecewise modified log version 1 
#                        ! if -2d0, activate piecewise modified log version 2
#                        ! piecewise modified log: log(Q/pT) for pT<Q/2
#                        !                         zero for pT>Q
#                        !                         smoothly interpolated inbetween
kappaQ            1d0    ! (default 1.) factor of scale Q inside the (modified) logarithm:
#                        !              Q = Qref * kappaQ (Qref=invariant mass of the system)
#                        !  Set =< 0.5d0 for ttbar !
Q0           1.390985    ! (default 0.) Q0 value used in profiled scales (see 2006.04133 for more details)
                         !              smaller values can be used too.
profiledscales      1    ! (default 0) if 1, use the profiled scales with cutoff Q0 and power npow
npow                1    ! (default 1) power in profiled scales
withdamp            1    ! ???
doublefsr           1    ! ???

#------------------------------------------------
#   SCALE VARIATION & REWEIGHTING
#------------------------------------------------
renscfact         1d0    ! (default 1d0) ren scale factor: muren  = muref * renscfact
facscfact         1d0    ! (default 1d0) fac scale factor: mufact = muref * facscfact
storeinfo_rwgt      1    ! store info to allow for reweighting
flg_debug           1    ! store extra event info for debugging

rwl_file '-'


lhrwgt_id 'st4'
lhrwgt_descr 'st4 NNLOPS'

<initrwgt>
<weightgroup name='First-Weights' combine=' ' >
<weight id='11H' > renscfact=1.0 facscfact=1.0 kappaQ=0.5 kill_D3=0 </weight>
<weight id='12H' > renscfact=1.0 facscfact=2.0 kappaQ=0.5 kill_D3=0 </weight>
<weight id='21H' > renscfact=2.0 facscfact=1.0 kappaQ=0.5 kill_D3=0 </weight>
<weight id='22H' > renscfact=2.0 facscfact=2.0 kappaQ=0.5 kill_D3=0 </weight>
<weight id='1HH' > renscfact=1.0 facscfact=0.5 kappaQ=0.5 kill_D3=0 </weight>
<weight id='H1H' > renscfact=0.5 facscfact=1.0 kappaQ=0.5 kill_D3=0 </weight>
<weight id='HHH' > renscfact=0.5 facscfact=0.5 kappaQ=0.5 kill_D3=0 </weight>
</weightgroup>
</initrwgt>



#------------------------------------------------
#   PROCESS PARAMETERS
#------------------------------------------------
vdecaymode          2               ! Z decay products (default 2): 1 for electronic, 2 for muonic and 3 for tauonic decay

min_Z_mass       66d0               ! upper bound of Z-mass window
max_Z_mass      116d0               ! upper bound of Z-mass window

ewscheme            3               ! EW input scheme 1: Gmu scheme (mZ,mW,Gmu), 2: alpha scheme (mZ,mW,alpha), 3:mZ,sin(theta_w),Gmu scheme
                                    ! ewscheme = -1 will run the code as distributed until April 2022 (kept for backward compatibility)
complexgmu          1               ! for ewscheme=1 and ewscheme=2, if 1: use complex mZ and mW to get EW parameters (computed from width)

Zmass       91.1876d0               ! set mass  of Z boson (used in calculation and for all EW input schemes)
Zwidth 2.4941343245745466           ! set width of Z boson (used in calculation and in ewscheme=1 and ewscheme=2, if complexgmu=1)
Wmass        80.385d0               ! set mass  of W boson (used in ewscheme=1 and ewscheme=2)
Wwidth       2.0854d0               ! set width of W boson (used in ewscheme=1 and ewscheme=2, if complexgmu=1)
gmu 1.1663786999999999E-005         ! set Fermi constant Gmu (used in ewscheme=1)
alphaem 0.00756246890198476         ! set EW coupling (used in ewscheme=2)
sthw2     0.23153999447822571       ! set sin(theta_w)^2 (used in ewscheme=3)


#------------------------------------------------
#   Generation cuts
#------------------------------------------------
bornktmin       0.26d0    ! Generation cut; minimmum kt in underlying born


#------------------------------------------------
#   POWHEG PARAMETERS: Monte Carlo Integration 
#------------------------------------------------
#   Parameters to allow or not the use of stored data
use-old-grid        1     ! if 1 use old grid if file pwggrids.dat is present (<> 1 regenerate)

#   General MC integration settings
ncall1           500000   ! number of calls for initializing the integration grid
itmx1                 5   ! number of iterations for initializing the integration grid
ncall2           500000   ! number of calls for computing the integral and finding upper bound
itmx2                 5   ! number of iterations for computing the integral and finding upper bound

#   Folding used in the integration of the real contributions
foldcsi             5     ! number of folds on csi integration
foldy               2     ! number of folds on  y  integration
foldphi             2     ! number of folds on phi integration

#------------------------------------------------
#   POWHEG PARAMETERS: Plots and lhe events
#------------------------------------------------
testplots           1     ! (default 0, do not) do NLO and PWHG distributions
withnegweights      1     ! (1 default) If 1 output negative weighted events.
                          ! If 0 discard them
compress_lhe 1


#------------------------------------------------
#   POWHEG PARAMETERS: Upper bound evaluation
#------------------------------------------------
use-old-ubound      1    ! if 1 use norm of upper bounding function stored in pwgubound.dat, if present; <> 1 regenerate
nubound       1000000    ! number of bbarra calls to setup norm of upper bounding function
xupbound          2d0    ! increase upper bound for radiation generation
icsimax             3    ! <= 100, number of csi subdivision when computing the upper bounds
iymax               3    ! <= 100, number of y subdivision when computing the upper bounds
storemintupb        0    ! (default 0) if 1 improve upper bounding computation
ubexcess_correct    1    ! corrects for error in upper bound estimate


#------------------------------------------------
#   POWHEG PARAMETERS: Event generation
#------------------------------------------------
numevts         10000    ! number of events to be generated

#   To correct for UB violations detected during stage 4
#   (see file POWHEG-BOX-V2/Docs/BoundViolationFixes.pdf)
#
#   in essence, before analysing the .lhe files/running Pythia, run:
#
#   POWHEG-BOX-RES/Scripts/FindReweightFromCounters.py pwgcounters-st4-*.dat
#
#   uncomment lines below, and set corr_btilde and corr_remnant to the provided values
#
#btildeviol         1     ! if 1, turn on correction of UB violations
#corr_btilde      XXX     ! correction factor for btilde
#corr_remnant     XXX     ! correction factor for remnant


#------------------------------------------------
#   OPTIMIZATION OPTIONS
#------------------------------------------------
smartsig            1    ! (default 1)
fastbtlbound        0    ! (default 0), if 1 speed up computation of upper bound of btilde


#------------------------------------------------
#   OPTIONS TO CATCH INSTABILITIES
#------------------------------------------------
check_bad_st1       1    ! (default 0), if 1 takes care of removing bad grids during stage 1
check_bad_st2       1    ! (default 0), if 1 takes care of removing bad grids during stage 2


#------------------------------------------------
#   PARALLEL RUNS
#------------------------------------------------
#   The following is for parallel runs (see manual in Z2jet/Docs/)
!manyseeds           1
!parallelstage       4
!xgriditeration      2
!maxseeds        10000
